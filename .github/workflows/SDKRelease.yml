name: SDK CI with Maven

on:
  push:
    branches:
      - dev
      - feature/sdk-perf
    pull_request:
      branches: [ test ]
jobs:
  build:
    #配置权限
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      # 下载代码
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        # 安装 JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      # 配置 settings.xml 一般用于 Mavne 私库验证等
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: ''
          servers: ''
      # Maven 打包
      - name: Build with Maven
        run: mvn clean -DSkipTest=true package --file api-sdk/pom.xm
      # 将打包好的 Jar 包 放到 staging 文件夹
      - run: mkdir staging && cp api-sdk/target/*.jar staging
      # 设置 jobs Maven pom 版本环境变量
      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -DSkipTest=true -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: "Build & test"
        run: |
          echo "done!"
      # 上传文件并发布 Release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.REPO_ACCESS_TOKEN }}"
          automatic_release_tag: "${{ env.RELEASE_VERSION }}"
          prerelease: false
          title: "Release ${{ env.RELEASE_VERSION }}"
          files: |
            staging/*.jar
