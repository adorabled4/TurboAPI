
# 日志配置
logging:
  level:
    com.dhx.com.api.apiinterface: debug
    org.springframework: warn
spring:
  security:
    user:
      password: admin
      name: admin
  # 服务模块
  devtools:
    restart:
      # 热部署开关
      enabled: true
  redis:
    host: 192.168.159.134
    # Redis数据库索引（默认为0）
    database: 1
    port: 6379
    password: adorabled4
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0

  cloud:
    nacos:
      discovery:
        server-addr: 192.168.159.134:8848
  application:
    name: api-interface
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.159.134:3306/api-interface?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    username: root
    password: root

weather:
  apiKey: e86fcaac97a97aaa116af494ac1c9bfb

knife4j:
  enable: true
  openapi:
    title: api-platform_bankend
    description: 接口模块文档
    email: dhx2648466390@163.com
    concat: adorabled4
    url: https://blog.dhx.icu
    version: v4.0
    license: Apache 2.0
    license-url: https://blog.dhx.icu
    terms-of-service-url: https://blog.dhx.icu
    group:
      dev:
        group-name: 开发环境
        api-rule: package
        api-rule-resources:
          - com.dhx.apiinterface.controller

dubbo:
  application:
    metadataType: remote
    # 可选值 interface、instance、all，默认是 all，即接口级地址、应用级地址都注册
    register-mode: all
    service-discovery:
      # FORCE_INTERFACE，只消费接口级地址，如无地址则报错，单订阅 2.x 地址
      # APPLICATION_FIRST，智能决策接口级/应用级地址，双订阅
      # FORCE_APPLICATION，只消费应用级地址，如无地址则报错，单订阅 3.x 地址
      migration: FORCE_APPLICATION
    name: api-interface
  protocol:
    # 设置为 tri 即可使用 Triple 3.0 新协议
    # 性能对比 dubbo 协议并没有提升 但基于 http2 用于多语言异构等 http 交互场景
    # 使用 dubbo 协议通信
    name: dubbo
    # dubbo 协议端口(-1表示自增端口,从20880开始)
    port: -1
  # 注册中心配置
  registry:
    address: nacos://192.168.159.134:8848
    # 这里注意 由于 3.X 的 bug 导致注册组不生效
    group: dev
    # 由于 group 不生效 这里使用 namespace 将 dubbo 服务与 cloud 服务隔离
    # 否则会导致正常请求路由到 dubbo 服务报错
    parameters:
      # 注意 这里要在 nacos 创建名为 dubbo 的 namespace 环境
      namespace: b9970d70-8f1c-402e-b139-4a98f487c197
  # 消费者相关配置
  consumer:
    # 支持校验注解
    validation: true
    # 超时时间
    timeout: 3000
  scan:
#     接口实现类扫描
    base-packages: com.dhx.apiinterface.service