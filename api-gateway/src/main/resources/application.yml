spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        # 需要添加2个 , ,另一个是后台通往的接口模块的CRUD , 以及之后前端访问的接口(或者通过dubbo远程调用)
        - id: core_route
          uri: lb://api-core
          predicates:
            - Path=/apicore/** # 符合 /api开头的地址就会被路由
          filters:
            - RewritePath=/apicore/?(?<segment>.*),/apicore/$\{segment}
        - id: serve_route # 接口路由
          uri: lb://api-interface
#          uri: http://127.0.0.1:8123
          predicates:
            - Path=/api/** # 符合 /api开头的地址就会被路由
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1   # 令牌桶每秒填充速率 生产令牌速度，每秒多少个令牌
                redis-rate-limiter.burstCapacity: 4   # 令牌桶总容量
                keyResolver: '#{@myKeyResolver}'  # 使用SpringEL表达式，从Spring容器中找对象，并赋值。 '#{@beanName}'
            - RewritePath=/api/?(?<segment>.*),/api/$\{segment}

dubbo:
  application:
    name: api-gateway-consumer
    shutwait: 1000000
  reference:
    timeout: 3000
  protocol:
    name: dubbo
    port: -1
  registry:
    id: nacos-registry
    address: nacos://192.168.159.134:8848?register-consumer-url=true
  # 消费者相关配置
  consumer:
    # 支持校验注解
    validation: true
    # 超时时间
    timeout: 3000
    # 初始化检查
    check: false
